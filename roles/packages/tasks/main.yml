---
- name: Ensure packages are up-to-date
  become: true
  ansible.builtin.apt:
    name: "*"
    state: present
    update_cache: true
  tags: packages
  when: ansible_facts['os_family'] == "Debian"

- name: Ensure packages are up-to-date
  become: true
  community.general.pacman:
    update_cache: true
    upgrade: true
  tags: packages
  when: ansible_facts['os_family'] == "Archlinux"

- name: Ensure apt Neovim is not installed
  become: true
  ansible.builtin.apt:
    name: neovim
    state: absent
  tags: packages
  when: ansible_facts['os_family'] == "Debian"

- name: Install Neovim latest stable release
  become: true
  ansible.builtin.get_url:
    url: https://github.com/neovim/neovim/releases/download/stable/nvim.appimage
    dest: /usr/local/bin/nvim
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "0755"
  tags: packages
  when: ansible_facts['os_family'] == "Debian"

- name: Install apt tools
  become: true
  ansible.builtin.apt:
    name: "{{ packages + apt_packages }}"
    state: present
    autoclean: true
    force: true
  tags: packages
  when: ansible_facts['os_family'] == "Debian"

- name: Install pacman tools
  become: true
  community.general.pacman:
    name: "{{ packages + pacman_packages }}"
    state: present
  tags: packages
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install AUR packages
  kewlfft.aur.aur:
    name: "{{ aur_packages }}"
    use: auto
    state: present
  become: true
  become_user: "{{ user }}"
  when: ansible_facts['os_family'] == "Archlinux"

- name: "Create FiraCode font directory for {{ user }}"
  become: true
  ansible.builtin.file:
    path: "/home/{{ user }}/.fonts/FiraCode"
    state: directory
    mode: "0755"
    owner: "{{ user }}"
    group: "{{ user }}"
  tags: packages

- name: Query Github API for the latest Nerd Fonts release
  ansible.builtin.uri:
    url: https://api.github.com/repos/ryanoasis/nerd-fonts/releases/latest
    return_content: true
  register: nerdfonts_release
  tags: packages

- name: Install FiraCode latest release
  become: true
  ansible.builtin.unarchive:
    src: "https://github.com/ryanoasis/nerd-fonts/releases/download/{{ nerdfonts_release.json.tag_name }}/FiraCode.tar.xz"
    remote_src: true
    dest: "/home/{{ user }}/.fonts/FiraCode/"
    mode: "0600"
    owner: "{{ user }}"
    group: "{{ user }}"
  tags: packages
- name: Query Github API for the latest Starship release
  ansible.builtin.uri:
    url: https://api.github.com/repos/starship/starship/releases/latest
    return_content: true
  register: starship_release
  tags: packages

- name: Install Starship latest release
  become: true
  ansible.builtin.unarchive:
    src: "https://github.com/starship/starship/releases/download/{{ starship_release.json.tag_name }}/starship-x86_64-unknown-linux-gnu.tar.gz"
    remote_src: true
    dest: /usr/local/bin/
    mode: "0755"
  tags: packages

- name: Query Github API for the latest Zellij release
  ansible.builtin.uri:
    url: https://api.github.com/repos/zellij-org/zellij/releases/latest
    return_content: true
  register: zellij_release
  tags: packages

- name: Install Zellij latest release
  become: true
  ansible.builtin.unarchive:
    src: "https://github.com/zellij-org/zellij/releases/download/v0.37.2/zellij-x86_64-unknown-linux-musl.tar.gz"
    remote_src: true
    dest: /usr/local/bin/
    mode: "0755"
  tags: packages

- name: Check if Cargo is installed
  become: true
  become_user: "{{ user }}"
  ansible.builtin.command: which cargo
  failed_when: false
  register: cargo_installed
  changed_when: false
  tags: packages

- name: Download cargo Install script
  become: true
  ansible.builtin.get_url:
    url: https://sh.rustup.rs
    dest: /tmp/sh.rustup.rs
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "0755"
  tags: packages
  when: cargo_installed.rc in [1]

- name: Install cargo
  become: true
  become_user: "{{ user }}"
  ansible.builtin.command:
    cmd: /tmp/sh.rustup.rs -y
  args:
    creates: "/home/{{ user }}/.cargo/bin/cargo"
  tags: packages
  when: cargo_installed.rc in [1]

- name: Install Alacritty & Zellij Runner
  become: true
  become_user: "{{ user }}"
  community.general.cargo:
    name: "{{ item }}"
    state: latest
  loop:
    - zellij-runner
    - alacritty
  tags: packages

- name: Add rust binaries to path
  ansible.builtin.file:
    src: "/home/{{ user }}/.cargo/bin/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    owner: root
    group: root
    state: link
  loop:
    - alacritty
    - cargo
    - cargo-clippy
    - cargo-fmt
    - cargo-miri
    - clippy-driver
    - rls
    - rust-analyzer
    - rustc
    - rustdoc
    - rustfmt
    - rust-gdb
    - rust-gdbgui
    - rust-lldb
    - rustup
    - zellij-runner
  tags: packages

- name: Add symbolik link to fix Debian fd
  ansible.builtin.file:
    src: "/usr/bin/fdfind"
    dest: "/usr/bin/fd"
    owner: root
    group: root
    state: link
  tags: packages
  when: ansible_facts['os_family'] == "Debian"

- name: Customize default screenkey display position
  become: true
  ansible.builtin.lineinfile:
    name: /usr/share/applications/screenkey.desktop
    state: present
    regexp: '^Exec'
    line: 'Exec=screenkey -p fixed --geometry 25%x10%+74%-50%'
  tags: packages

- name: Fix caja desktop shortcuts (bug with i3)
  become: true
  ansible.builtin.lineinfile:
    name: "{{ item }}"
    state: present
    regexp: '^Exec'
    line: 'Exec=/usr/bin/caja --no-desktop --browser .'
  tags: packages
  loop:
    - /usr/share/applications/caja-browser.desktop
    - /usr/share/applications/caja.desktop
  when: ansible_facts['os_family'] == "Debian"

- name: Add the flathub flatpak repository remote to the user installation
  community.general.flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
    method: user
  tags: packages
  become: true
  become_user: "{{ user }}"

- name: Install flatpak packages from flathub for current user
  community.general.flatpak:
    name: "{{ flatpak_packages }}"
    state: present
    method: user
  tags: packages
  become: true
  become_user: "{{ user }}"

- name: Install Proton Bridge client
  ansible.builtin.apt:
    deb: "https://proton.me/download/bridge/protonmail-bridge_{{ proton_bridge_version }}-1_amd64.deb"
    state: present
  when: ansible_facts['os_family'] == "Debian"
